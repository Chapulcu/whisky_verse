{
  "permissions": {
    "allow": [
      "Bash(cd:*)",
      "Bash(npm run lint)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(npm start)",
      "Bash(npm run:*)",
      "Bash(pkill:*)",
      "Bash(chmod:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(./scripts/deploy.sh deploy:*)",
      "Bash(curl:*)",
      "Bash(./scripts/setup-network-access.sh:*)",
      "Bash(npx tsc:*)",
      "Bash(supabase functions deploy:*)",
      "Bash(npm install:*)",
      "Bash(brew install:*)",
      "Bash(supabase:*)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "WebFetch(domain:status.supabase.com)",
      "Bash(git clone:*)",
      "Read(//Users/takhan/Desktop/agent_workspace 3/**)",
      "Bash(unzip:*)",
      "Bash(lsof:*)",
      "Bash(find:*)",
      "Bash(psql:*)",
      "Bash(/bashes)",
      "Bash(sed:*)",
      "Bash(cat:*)",
      "Bash(killall:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(sudo lsof:*)",
      "Bash(pbcopy)",
      "Bash(git pull:*)",
      "Bash(git config:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(npx supabase db describe:*)",
      "Bash(npx supabase:*)",
      "Bash(git restore:*)",
      "Bash(git rm:*)",
      "Bash(git commit:*)",
      "Read(//var/folders/xp/g7ybln5j49v5254kxypbsm3h0000gn/T/TemporaryItems/NSIRD_screencaptureui_1nkFZH/**)",
      "Bash(git reset:*)",
      "Bash(mkdir:*)",
      "Bash(npm uninstall:*)",
      "Read(//var/folders/xp/g7ybln5j49v5254kxypbsm3h0000gn/T/TemporaryItems/NSIRD_screencaptureui_kXivyw/**)",
      "Bash(node:*)",
      "Bash(npm init:*)",
      "Bash(kill:*)",
      "Bash(rm:*)",
      "Read(//var/folders/xp/g7ybln5j49v5254kxypbsm3h0000gn/T/TemporaryItems/NSIRD_screencaptureui_dAxWO4/**)",
      "Read(//var/folders/xp/g7ybln5j49v5254kxypbsm3h0000gn/T/TemporaryItems/NSIRD_screencaptureui_s01F74/**)",
      "Read(//Users/takhan/Desktop/**)",
      "Read(//var/folders/xp/g7ybln5j49v5254kxypbsm3h0000gn/T/TemporaryItems/NSIRD_screencaptureui_kT4auO/**)",
      "WebFetch(domain:localhost)",
      "Bash(grep:*)",
      "Read(//Users/takhan/Downloads/**)",
      "Bash(HTTPS=true npm run dev)",
      "Bash(openssl req:*)",
      "Bash(sudo:*)",
      "Bash(ngrok:*)",
      "Bash(npx serve:*)",
      "Bash(echo:*)",
      "Bash(npx vercel:*)",
      "Bash(surge:*)",
      "Bash(zip:*)",
      "Bash(vercel login:*)",
      "Bash(vercel:*)",
      "WebFetch(domain:capable-bonbon-7c16bb.netlify.app)",
      "Bash(.specify/scripts/bash/create-new-feature.sh:*)",
      "Bash(.specify/scripts/bash/check-prerequisites.sh:*)",
      "Bash(.specify/scripts/bash/setup-plan.sh:*)",
      "Bash(.specify/scripts/bash/update-agent-context.sh:*)",
      "mcp__ide__getDiagnostics",
      "Bash(git remote add:*)",
      "Bash(git log:*)",
      "Bash(gh pr create --title \"feat: Admin-Controlled Default Language Settings\" --body \"$(cat <<''EOF''\n## 🌍 Summary\n\nThis PR implements a comprehensive admin-controlled default language system for WhiskyVerse. Administrators can now set the application''s default language through the Admin panel, which applies to new visitors while preserving existing users'' language preferences.\n\n## ✨ Key Features\n\n### 1. Admin Configuration Panel\n- New \"Default Application Language\" card in Admin → Translations\n- Dropdown to select from supported languages (TR/EN/RU/BG)\n- Real-time updates with success/error notifications\n- Admin-only access with RLS policies\n\n### 2. Database Schema\n- `app_settings` table with singleton pattern (id=1)\n- RLS policies: public read, admin-only update\n- Automatic timestamp tracking\n- Foreign key to profiles for audit trail\n\n### 3. Smart Language Detection\n- **New users**: Get admin-configured default language\n- **Returning users**: Keep their personal preference (stored in localStorage)\n- **No automatic detection**: Removed browser language auto-detection to respect admin settings\n\n### 4. User Experience\n- Seamless language initialization on app load\n- Debug logging for troubleshooting\n- Fallback to English if issues occur\n- User preferences always take priority over defaults\n\n## 📁 Files Changed\n\n- `supabase/migrations/009_create_app_settings.sql` - Database schema\n- `src/hooks/useAppSettings.ts` - Settings hook with React Query\n- `src/components/admin/DefaultLanguageSettings.tsx` - Admin UI component\n- `src/App.tsx` - DefaultLanguageInitializer component\n- `src/lib/supabase.ts` - Database type definitions\n- `src/lib/i18n.ts` - i18n configuration updates (removed LanguageDetector)\n- `src/pages/AdminPage.tsx` - UI integration + Shield icon fix\n- Translation files - New keys for all 4 languages\n\n## 🧪 Testing\n\n### How to Test:\n1. **Admin Configuration**:\n   - Login as admin\n   - Go to Admin → Translations\n   - Change \"Default Application Language\"\n   - Verify success toast appears\n\n2. **New User Experience**:\n   - Open incognito/private window\n   - Navigate to http://localhost:5173\n   - Verify app loads in admin-selected language\n   - Console should show: \"🌍 No user preference found, applying default language: [lang]\"\n\n3. **Existing User Preference**:\n   - Change language via language toggle\n   - Refresh page\n   - Verify personal preference is maintained\n   - Console should show: \"✅ User has language preference: [lang]\"\n\n### Test Scenarios Verified:\n- ✅ Admin can change default language\n- ✅ New users see default language\n- ✅ Returning users keep their preference\n- ✅ RLS policies prevent non-admin updates\n- ✅ Database schema with proper constraints\n- ✅ No automatic browser language detection\n\n## 🔐 Security\n\n- RLS policies enforced: only admins can update settings\n- Input validation: language must be in [''tr'', ''en'', ''ru'', ''bg'']\n- Singleton pattern prevents multiple config rows\n- Audit trail with updated_by and updated_at\n\n## 🐛 Bug Fixes\n\n- Fixed missing Shield icon import in AdminPage\n- Removed LanguageDetector to prevent unwanted auto-detection\n- Fixed i18n initialization race condition\n- Proper localStorage handling for user preferences\n\n## 📝 Migration Instructions\n\n**Required:** Run SQL migration in Supabase Dashboard:\n```sql\n-- Execute supabase/migrations/009_create_app_settings.sql\n-- This creates the app_settings table and policies\n```\n\n## 🔗 Related Issues\n\nResolves user preference management and default language configuration\n\n## 📸 Screenshots\n\nAdmin Panel - Default Language Settings:\n- Language dropdown with TR/EN/RU/BG options\n- Info text explaining user preference behavior\n- Admin-only access with permission warnings\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\nEOF\n)\" --base main)"
    ],
    "deny": [],
    "ask": []
  }
}