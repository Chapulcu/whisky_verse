version: '3.8'

services:
  # WhiskyVerse Frontend Application
  whiskyverse-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: whiskyverse-frontend
    ports:
      - "${FRONTEND_PORT:-3001}:80"
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
      - VITE_APP_ENV=production
    env_file:
      - .env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - whiskyverse-network
    volumes:
      - app_logs:/var/log/nginx
    labels:
      - "com.whiskyverse.service=frontend"
      - "com.whiskyverse.version=1.0.0"

  # Nginx Reverse Proxy with SSL Support
  nginx-proxy:
    image: nginx:alpine
    container_name: whiskyverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./deploy/ssl:/etc/nginx/ssl:ro
      - proxy_logs:/var/log/nginx
    depends_on:
      whiskyverse-app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - whiskyverse-network
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    labels:
      - "com.whiskyverse.service=proxy"

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: whiskyverse-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-secure-redis-password}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - whiskyverse-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - full-stack
    labels:
      - "com.whiskyverse.service=cache"

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: whiskyverse-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./deploy/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - whiskyverse-network
    profiles:
      - monitoring
    labels:
      - "com.whiskyverse.service=monitoring"

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: whiskyverse-grafana
    ports:
      - "${GRAFANA_PORT:-3002}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./deploy/monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - whiskyverse-network
    profiles:
      - monitoring
    labels:
      - "com.whiskyverse.service=dashboard"

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  app_logs:
    driver: local
  proxy_logs:
    driver: local

networks:
  whiskyverse-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1